//created on: 2018-12-08
package netflix

//list any import classes here.
import netflix.NetflixWindow

import java.util.List
import java.util.Arrays
import java.util.ArrayList

import org.kie.api.runtime.KieRuntime
import org.kie.api.runtime.rule.FactHandle

import javax.swing.JPanel
import javax.swing.JTextPane
import javax.swing.JRadioButton
import javax.swing.ButtonGroup;
import javax.swing.JToggleButton
import java.awt.CardLayout


//declare any global variables here
global JPanel contentPane
global JTextPane textPane
global ArrayList buttons 
global JTextPane endText
global JToggleButton buttonOK
global ButtonGroup buttonGroup

declare Question
	description : String @key
	choices : String[] @key
	selected: String
end



rule 'Init'
	when
	then
		System.out.println("init");
		String[] list = {"SciFi", "Horror", "Slipstream", "Fantasy"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
		 	buttons, buttonOK, buttonGroup,
			new Question("What SF series should I watch on Netflix?", list));
end


rule 'What SF series should I watch on Netflix? SciFi'
	when 
		q : Question(description.equals("What SF series should I watch on Netflix?") 
			&& selected.equals("SciFi"))
		
	then
		System.out.println("What SF series should I watch on Netflix? SciFi");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Like anthologies?", list));		
end


rule 'What SF series should I watch on Netflix? SciFi; Like anthologies? Yep'
	when 
		q : Question(description.equals("What SF series should I watch on Netflix?") 
			&& selected.equals("SciFi"))
		q2 : Question(description.equals("Like anthologies?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Like anthologies? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "The outer limits");		
end


rule 'What SF series should I watch on Netflix? SciFi; Like anthologies? Nope'
	when 
		q : Question(description.equals("What SF series should I watch on Netflix?") 
			&& selected.equals("SciFi"))
		q2 : Question(description.equals("Like anthologies?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Like anthologies? Nope");
		String[] list = {"Stars", "Home"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Space Opera or close to home?", 
			list ));		
end


rule 'Space Opera or close to home? Home'
	when 
		q : Question(description.equals("Space Opera or close to home?") 
			&& selected.equals("Home"))
		
	then
		System.out.println("Space Opera or close to home? Home");
		String[] list = {"Friends", "Invaders"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Friendlies or invaders?", 
			list ));		
end


rule 'Friendlies or invaders? Friends'
	when 
		q : Question(description.equals("Friendlies or invaders?") 
			&& selected.equals("Friends"))
		
	then
		System.out.println("Friendlies or invaders? Friends");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Alien nation");	
end


rule 'Friendlies or invaders? Invaders'
	when 
		q : Question(description.equals("Friendlies or invaders?") 
			&& selected.equals("Invaders"))
		
	then
		System.out.println("Friendlies or invaders? Invaders");
		String[] list = {"Toons", "Live"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Animated or Live Action?", 
			list ));		
end


rule 'Friendlies or invaders? Invaders; Animated or Live Action? Live'
	when 
		q : Question(description.equals("Friendlies or invaders?") 
			&& selected.equals("Invaders"))
		q2 : Question(description.equals("Animated or Live Action?") 
			&& selected.equals("Live"))
		
	then
		System.out.println("Animated or Live Action? Live");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "V");		
end


rule 'Friendlies or invaders? Invaders; Animated or Live Action? Toons'
	when 
		q : Question(description.equals("Friendlies or invaders?") 
			&& selected.equals("Invaders"))
		q2 : Question(description.equals("Animated or Live Action?") 
			&& selected.equals("Toons"))
		
	then
		System.out.println("Animated or Live Action? Toons");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Invader Zim");		
end


rule 'Space Opera or close to home? Stars'
	when 
		q : Question(description.equals("Space Opera or close to home?") 
			&& selected.equals("Stars"))
		
	then
		System.out.println("Space Opera or close to home? Stars");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Comedy?", 
			list ));		
end


rule 'Comedy? Nope'
	when 
		q : Question(description.equals("Comedy?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Comedy? Nope");
		String[] list = {"Yep", "Nope", "Yep. But seen em all 1000X"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Trekkie?", 
			list ));		
end


rule 'Trekkie? Yep. But seen em all 1000X'
	when 
		q : Question(description.equals("Trekkie?") 
			&& selected.equals("Yep. But seen em all 1000X"))
		
	then
		System.out.println("Trekkie? Yep. But seen em all 1000X");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Earth final conflict");		
end


rule 'Trekkie? Yep'
	when 
		q : Question(description.equals("Trekkie?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Trekkie? Yep");
		String[] list = {"Woot", "NOOOO!"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Will Wheaton?", 
			list ));				
end


rule 'Will Wheaton? Woot'
	when 
		q : Question(description.equals("Will Wheaton?") 
			&& selected.equals("Woot"))
		
	then
		System.out.println("Will Wheaton? Woot");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Star Trek: The next generation");			
end


rule 'Will Wheaton? NOOOO!'
	when 
		q : Question(description.equals("Will Wheaton?") 
			&& selected.equals("NOOOO!"))
		
	then
		System.out.println("Will Wheaton? NOOOO!");
		String[] list = {"Poli-sci", "Womens Lib", "Sociology", "History"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("What do you study?", 
			list ));	
end


rule 'What do you study? Poli-sci'
	when 
		q : Question(description.equals("What do you study?") 
			&& selected.equals("Poli-sci"))
		
	then
		System.out.println("What do you study? Poli-sci");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Star Trek: Deep space nine");	
end


rule 'What do you study? Womens Lib'
	when 
		q : Question(description.equals("What do you study?") 
			&& selected.equals("Womens Lib"))
		
	then
		System.out.println("What do you study? Womens Lib");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Star Trek: Voyager");	
end


rule 'What do you study? Sociology'
	when 
		q : Question(description.equals("What do you study?") 
			&& selected.equals("Sociology"))
		
	then
		System.out.println("What do you study? Sociology");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Star Trek: The original series");	
end


rule 'What do you study? History'
	when 
		q : Question(description.equals("What do you study?") 
			&& selected.equals("History"))
		
	then
		System.out.println("What do you study? History");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Star Trek: Enterprise");	
end


rule 'Trekkie? Nope'
	when 
		q : Question(description.equals("Trekkie?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Trekkie? Nope");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Like westerns?", 
			list ));				
end


rule 'Like westerns? Nope'
	when 
		q : Question(description.equals("Like westerns?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Like westerns? Nope");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Time/space Gateways?", 
			list ));				
end


rule 'Time/space Gateways? Yep'
	when 
		q : Question(description.equals("Time/space Gateways?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Time/space Gateways? Yep");
		String[] list = {"UK", "USA"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("British or American?", 
			list ));				
end


rule 'Time/space Gateways? Yep; British or American? UK'
	when 
		q : Question(description.equals("Time/space Gateways?") 
			&& selected.equals("Yep"))
		q2 : Question(description.equals("British or American?") 
			&& selected.equals("UK"))
		
	then
		System.out.println("British or American? UK");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Doctor Who");				
end


rule 'Time/space Gateways? Yep; British or American? USA'
	when 
		q : Question(description.equals("Time/space Gateways?") 
			&& selected.equals("Yep"))
		q2 : Question(description.equals("British or American?") 
			&& selected.equals("USA"))
		
	then
		System.out.println("British or American? USA");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Stargate");				
end


rule 'Time/space Gateways? Nope'
	when 
		q : Question(description.equals("Time/space Gateways?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Time/space Gateways? Nope");
		String[] list = {"Classic", "Modern"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Classic or Modern?", 
			list ));				
end


rule 'Classic or Modern? Modern'
	when 
		q : Question(description.equals("Classic or Modern?") 
			&& selected.equals("Modern"))
		
	then
		System.out.println("Classic or Modern? Modern");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Galactica");				
end


rule 'Classic or Modern? Classic'
	when 
		q : Question(description.equals("Classic or Modern?") 
			&& selected.equals("Classic"))
		
	then
		System.out.println("Classic or Modern? Classic");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Galactica");				
end


rule 'Like westerns? Yep'
	when 
		q : Question(description.equals("Like westerns?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Like westerns? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "firefly");				
end


rule 'Comedy? Yep'
	when 
		q : Question(description.equals("Comedy?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Comedy? Yep");
		String[] list = {"UK", "USA"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("British or American?", 
			list ));		
end


rule 'Comedy? Yep; British or American? USA'
	when 
		q : Question(description.equals("Comedy?") 
			&& selected.equals("Yep"))
		q2 : Question(description.equals("British or American?") 
			&& selected.equals("USA"))
		
	then
		System.out.println("British or American? USA");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Futurama");		
end


rule 'Comedy? Yep; British or American? UK'
	when 
		q : Question(description.equals("Comedy?") 
			&& selected.equals("Yep"))
		q2 : Question(description.equals("British or American?") 
			&& selected.equals("UK"))
		
	then
		System.out.println("British or American? UK");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Red dwarf");		
end


rule 'What SF series should I watch on Netflix? Horror'
	when 
		q : Question(description.equals("What SF series should I watch on Netflix?") 
			&& selected.equals("Horror"))
		
	then
		System.out.println("What SF series should I watch on Netflix? Horror");
		String[] list = {"Vampires", "Zombies", "Neither"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Vampires or Zombies?", 
			list ));		
end


rule 'Vampires or Zombies? Zombies'
	when 
		q : Question(description.equals("Vampires or Zombies?") 
			&& selected.equals("Zombies"))
		
	then
		System.out.println("Vampires or Zombies? Zombies");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "The walking dead");		
end


rule 'Vampires or Zombies? Neither'
	when 
		q : Question(description.equals("Vampires or Zombies?") 
			&& selected.equals("Neither"))
		
	then
		System.out.println("Vampires or Zombies? Neither");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Like anthologies?", 
			list ));	
end


rule 'Vampires or Zombies? Neither; Like anthologies? Nope'
	when 
		q : Question(description.equals("Vampires or Zombies?") 
			&& selected.equals("Neither"))
		q2 : Question(description.equals("Like anthologies?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Like anthologies? Nope");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "The charmed");	
end


rule 'Vampires or Zombies? Neither; Like anthologies? Yep'
	when 
		q : Question(description.equals("Vampires or Zombies?") 
			&& selected.equals("Neither"))
		q2 : Question(description.equals("Like anthologies?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Like anthologies? Yep");
		String[] list = {"Psycho", "Gory"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Psychological or Gory?", 
			list ));	
end


rule 'Psychological or Gory? Psycho'
	when 
		q : Question(description.equals("Psychological or Gory?") 
			&& selected.equals("Psycho"))
		
	then
		System.out.println("Psychological or Gory? Psycho");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "The twilight zone");	
end


rule 'Psychological or Gory? Gory'
	when 
		q : Question(description.equals("Psychological or Gory?") 
			&& selected.equals("Gory"))
		
	then
		System.out.println("Psychological or Gory? Gory");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Tales from the crypt");	
end


rule 'Vampires or Zombies? Vampires'
	when 
		q : Question(description.equals("Vampires or Zombies?") 
			&& selected.equals("Vampires"))
		
	then
		System.out.println("Vampires or Zombies? Vampires");
		String[] list = {"<16", ">16"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("How old are you?", 
			list ));	
end


rule 'How old are you? >16'
	when 
		q : Question(description.equals("How old are you?") 
			&& selected.equals(">16"))
		
	then
		System.out.println("How old are you? >16");
		String[] list = {"SFW", "NSFW"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("SFW or NSFW?", 
			list ));	
end


rule 'SFW or NSFW? SFW'
	when 
		q : Question(description.equals("SFW or NSFW?") 
			&& selected.equals("SFW"))
		
	then
		System.out.println("SFW or NSFW? SFW");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Seen Buffy?", 
			list ));	
end


rule 'Seen Buffy? Nope'
	when 
		q : Question(description.equals("Seen Buffy?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Seen Buffy? Nope");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Buffy");	
end


rule 'Seen Buffy? Yep'
	when 
		q : Question(description.equals("Seen Buffy?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Seen Buffy? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Angel");	
end


rule 'SFW or NSFW? NSFW'
	when 
		q : Question(description.equals("SFW or NSFW?") 
			&& selected.equals("NSFW"))
		
	then
		System.out.println("SFW or NSFW? NSFW");
		String[] list = {"UK", "USA"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("British or American?", 
			list ));	
end


rule 'SFW or NSFW? NSFW; British or American? USA'
	when 
		q : Question(description.equals("SFW or NSFW?") 
			&& selected.equals("NSFW"))
		q2 : Question(description.equals("British or American?") 
			&& selected.equals("USA"))
		
	then
		System.out.println("British or American? USA");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "True blood");	
end


rule 'SFW or NSFW? NSFW; British or American? UK'
	when 
		q : Question(description.equals("SFW or NSFW?") 
			&& selected.equals("NSFW"))
		q2 : Question(description.equals("British or American?") 
			&& selected.equals("UK"))
		
	then
		System.out.println("British or American? UK");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Being human");	
end


rule 'How old are you? <16'
	when 
		q : Question(description.equals("How old are you?") 
			&& selected.equals("<16"))
		
	then
		System.out.println("How old are you? >16");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "The vampire diaries");	
end


rule 'What SF series should I watch on Netflix? Slipstream'
	when 
		q : Question(description.equals("What SF series should I watch on Netflix?") 
			&& selected.equals("Slipstream"))
		
	then
		System.out.println("What SF series should I watch on Netflix? Slipstream");
		String[] list = {"Action", "Drama"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Action or Drama?", 
			list ));		
end


rule 'Action or Drama? Drama'
	when 
		q : Question(description.equals("Action or Drama?") 
			&& selected.equals("Drama"))
		
	then
		System.out.println("Action or Drama? Drama");
		String[] list = {"Yep", "Nope", "Hated it"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Have you seen X-files?", 
			list ));		
end


rule 'Have you seen X-files? Nope'
	when 
		q : Question(description.equals("Have you seen X-files?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Have you seen X-files? Nope");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "The X-files");		
end


rule 'Have you seen X-files? Hated it'
	when 
		q : Question(description.equals("Have you seen X-files?") 
			&& selected.equals("Hated it"))
		
	then
		System.out.println("Have you seen X-files? Nope");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Are you OK with being let down?", 
			list ));	
end


rule 'Are you OK with being let down? Yep'
	when 
		q : Question(description.equals("Are you OK with being let down?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Are you OK with being let down? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Lost");
end


rule 'Are you OK with being let down? Nope'
	when 
		q : Question(description.equals("Are you OK with being let down?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Are you OK with being let down? Nope");
		String[] list = {"Who?", "I'm a Fan"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("How do you feel about Scott Bakula?", 
			list ));	
end


rule 'How do you feel about Scott Bakula? Im a Fan?'
	when 
		q : Question(description.equals("How do you feel about Scott Bakula?") 
			&& selected.equals("I'm a Fan"))
		
	then
		System.out.println("How do you feel about Scott Bakula? I'm a Fan?");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Quantum Leap");
end


rule 'How do you feel about Scott Bakula? Who?'
	when 
		q : Question(description.equals("How do you feel about Scott Bakula?") 
			&& selected.equals("Who?"))
		
	then
		System.out.println("How do you feel about Scott Bakula? Who?");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Warehouse 13");
end


rule 'Have you seen X-files? Yep'
	when 
		q : Question(description.equals("Have you seen X-files?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Have you seen X-files? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Fringe");		
end


rule 'Action or Drama? Action'
	when 
		q : Question(description.equals("Action or Drama?") 
			&& selected.equals("Action"))
		
	then
		System.out.println("Action or Drama? Action");
		String[] list = {"Streampunk", "Biopunk"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Biopunk or Streampunk?", 
			list ));		
end


rule 'Biopunk or Streampunk? Biopunk'
	when 
		q : Question(description.equals("Biopunk or Streampunk?") 
			&& selected.equals("Biopunk"))
		
	then
		System.out.println("Biopunk or Streampunk? Biopunk");
		String[] list = {"Cameron", "Whedon"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Whedon or Cameron?", 
			list ));		
end


rule 'Whedon or Cameron? Whedon'
	when 
		q : Question(description.equals("Whedon or Cameron?") 
			&& selected.equals("Whedon"))
		
	then
		System.out.println("Whedon or Cameron? Whedon");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Dollhouse");		
end


rule 'Whedon or Cameron? Cameron'
	when 
		q : Question(description.equals("Whedon or Cameron?") 
			&& selected.equals("Cameron"))
		
	then
		System.out.println("Whedon or Cameron? Cameron");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Dark Angel");		
end


rule 'Biopunk or Streampunk? Streampunk'
	when 
		q : Question(description.equals("Biopunk or Streampunk?") 
			&& selected.equals("Streampunk"))
		
	then
		System.out.println("Biopunk or Streampunk? Streampunk");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Sanctuary");		
end


rule 'What SF series should I watch on Netflix? Fantasy'
	when 
		q : Question(description.equals("What SF series should I watch on Netflix?") 
			&& selected.equals("Fantasy"))
		
	then
		System.out.println("What SF series should I watch on Netflix? Fantasy");
		String[] list = {"Urban", "Period"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Urban or Period?", 
			list ));		
end


rule 'Urban or Period? Urban'
	when 
		q : Question(description.equals("Urban or Period?") 
			&& selected.equals("Urban"))
		
	then
		System.out.println("Urban or Period? Urban");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Like Superheroes?", 
			list ));		
end


rule 'Like Superheroes? Yep'
	when 
		q : Question(description.equals("Like Superheroes?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Like Superheroes? Urban");
		String[] list = {"Live", "Toons"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Animated or Live Action?", 
			list ));		
end


rule 'Like Superheroes? Yep; Animated or Live Action? Toons'
	when 
		q : Question(description.equals("Animated or Live Action?") 
			&& selected.equals("Toons"))
		q2 : Question(description.equals("Like Superheroes?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Animated or Live Action? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "The Tick");		
end


rule 'Like Superheroes? Yep; Animated or Live Action? Live'
	when 
		q : Question(description.equals("Animated or Live Action?") 
			&& selected.equals("Live"))
		q2 : Question(description.equals("Like Superheroes?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Animated or Live Action? Live");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "SmallVille");		
end


rule 'Like Superheroes? Nope'
	when 
		q : Question(description.equals("Like Superheroes?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Like Superheroes? Nope");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("How about Mythology?", 
			list ));	
end


rule 'How about Mythology? Yep'
	when 
		q : Question(description.equals("How about Mythology?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("How about Mythology? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Highlander");
end


rule 'How about Mythology? Nope'
	when 
		q : Question(description.equals("How about Mythology?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("How about Mythology? Nope");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Dresden files");
end


rule 'Urban or Period? Period'
	when 
		q : Question(description.equals("Urban or Period?") 
			&& selected.equals("Period"))
		
	then
		System.out.println("Urban or Period? Period");
		String[] list = {"Myths", "Legends"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Myths or Legends?", 
			list ));		
end


rule 'Myths or Legends? Myths'
	when 
		q : Question(description.equals("Myths or Legends?") 
			&& selected.equals("Myths"))
		
	then
		System.out.println("Myths or Legends? Myths");
		String[] list = {"Dudes", "Ladies"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Buff Dudes of Hot Girls?", 
			list ));		
end


rule 'Buff Dudes of Hot Girls? Ladies'
	when 
		q : Question(description.equals("Buff Dudes of Hot Girls?") 
			&& selected.equals("Ladies"))
		
	then
		System.out.println("Buff Dudes of Hot Girls? Ladies");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Xena");		
end


rule 'Buff Dudes of Hot Girls? Dudes'
	when 
		q : Question(description.equals("Buff Dudes of Hot Girls?") 
			&& selected.equals("Dudes"))
		
	then
		System.out.println("Buff Dudes of Hot Girls? Dudes");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Hercules");		
end


rule 'Myths or Legends? Legends'
	when 
		q : Question(description.equals("Myths or Legends?") 
			&& selected.equals("Legends"))
		
	then
		System.out.println("Myths or Legends? Legends");
		String[] list = {"Toons", "Live"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Animated or Live Action?", 
			list ));		
end


rule 'Myths or Legends? Legends; Animated or Live Action? Live'
	when 
		q : Question(description.equals("Myths or Legends?") 
			&& selected.equals("Legends"))
		q2 : Question(description.equals("Animated or Live Action?") 
			&& selected.equals("Live"))
		
	then
		System.out.println("Animated or Live Action? Live");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Like lots of nudity?", 
			list ));		
end


rule 'Like lots of nudity? Yep'
	when 
		q : Question(description.equals("Like lots of nudity?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Like lots of nudity? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Spartacus");	
end


rule 'Like lots of nudity? Nope'
	when 
		q : Question(description.equals("Like lots of nudity?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Like lots of nudity? Nope");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Legend seeker");	
end


rule 'Myths or Legends? Legends; Animated or Live Action? Toons'
	when 
		q : Question(description.equals("Myths or Legends?") 
			&& selected.equals("Legends"))
		q2 : Question(description.equals("Animated or Live Action?") 
			&& selected.equals("Toons"))
		
	then
		System.out.println("Animated or Live Action? Toons");
		String[] list = {"Yep", "Nope"};
		addQuestion(kcontext.getKieRuntime(), textPane, 
			buttons, buttonOK, buttonGroup,
			new Question("Do you have a Gameboy?", 
			list ));		
end


rule 'Do you have a Gameboy? Nope'
	when 
		q : Question(description.equals("Do you have a Gameboy?") 
			&& selected.equals("Nope"))
		
	then
		System.out.println("Do you have a Gameboy? Nope");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Avatar");	
end


rule 'Do you have a Gameboy? Yep'
	when 
		q : Question(description.equals("Do you have a Gameboy?") 
			&& selected.equals("Yep"))
		
	then
		System.out.println("Do you have a Gameboy? Yep");
		happyEnd(kcontext.getKieRuntime(), contentPane, endText, "Pokemon");	
end


function void addQuestion(KieRuntime krt, JTextPane textPane, ArrayList buttons, JToggleButton buttonOK, ButtonGroup buttonGroup, Question question) {
	
	textPane.setText(question.getDescription());
	System.out.println("hi");
	
	
	for (JRadioButton jButton : (List <JRadioButton>) buttons) {
		jButton.setVisible(false);	
	}
	
	int i = 0;
	for (String choice : question.getChoices()) {
			((List <JRadioButton>)buttons).get(i).setText(choice);
			((List <JRadioButton>)buttons).get(i).setVisible(true);
			i++;				
		}
	
	
	while(buttonOK.isSelected() == false || buttonGroup.getSelection()== null) {
		if (buttonGroup.getSelection() != null) {
	        for (JRadioButton jRadioButton : (List <JRadioButton>)buttons) {
				if(jRadioButton.isSelected()) {
					question.setSelected(jRadioButton.getText());
				}
			}
			krt.insert(question);	
		}
		else {
			buttonOK.setSelected(false);
			System.out.print("");
		}
	}
	buttonOK.setSelected(false);
	buttonGroup.clearSelection();
	
}






function void happyEnd(KieRuntime krt, JPanel contentPane, JTextPane endText, String ending) {
	
	CardLayout cardLayout = (CardLayout)contentPane.getLayout();
	cardLayout.next(contentPane);
	
	for(FactHandle fact : krt.getFactHandles()) {
		System.out.println(fact.toString());
	}
	
	endText.setText("Congratulations you come to the end!\nYou should watch " + ending);
	System.out.println("\nEnd: " + ending);
	
}






